name: Main

on:
  pull_request:
    branches: [ main, release-* ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: ./github/actions/workflow-setup

    - name: Build
      run: make all ENVS=linux-amd64

    - name: Verify
      run: make verify

    - name: Test
      run: make test ENVS=linux-amd64

    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage1.txt,./coverage2.txt,./coverage3.txt,./addons/coverage.txt,./pinniped-components/post-deploy/coverage.txt,./pinniped-components/tanzu-auth-controller-manager/coverage.txt,./cli/core/coverage.txt,./cli/runtime/coverage.txt,./tkg/coverage.txt,./featuregates/client/cover.out,./featuregates/controller/cover.out,./capabilities/client/cover.out,./capabilities/controller/cover.out,./cmd/cli/plugin-admin/builder/cover.out,./cmd/cli/plugin-admin/codegen/cover.out,./cmd/cli/plugin-admin/test/cover.out,./apis/config/cover.out,./apis/run/cover.out,./packageclients/cover.out,./apis/addonconfigs/cover.out,./apis/cli/cover.out,./apis/core/cover.out,./cmd/cli/plugin/feature/cover.out,./cmd/cli/plugin/login/cover.out,./cmd/cli/plugin/package/cover.out,./cmd/cli/plugin/pinniped-auth/cover.out,./cmd/cli/plugin/secret/cover.out,./cmd/cli/plugin/cluster/coverage.txt,./cmd/cli/plugin/managementcluster/coverage.txt

  check:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: ./github/actions/build-setup
      with:
        use-node: "false"
    - name: Cache linting
      uses: actions/cache@v3
      with:
        path: ${{ runner.temp }}/lint_cache
        key: ${{ runner.os }}-lint-cache-2

    - name: Run lint checks
      env:
        GOLANGCI_LINT_CACHE: ${{ runner.temp }}/lint_cache
      run: |
        make lint
